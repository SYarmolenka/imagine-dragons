{"version":3,"sources":["webpack:///./src/templates/Album/CombineTracks/component.js","webpack:///./src/templates/Album/CombineTracks/index.js","webpack:///./src/templates/Album/CombineTracks/styles.js","webpack:///./src/templates/Album/component.js","webpack:///./src/templates/Album/index.js","webpack:///./src/templates/Album/styles.js"],"names":["CombineTracks","_ref","tracks","classes","half","Math","ceil","length","firstHalf","slice","secondHalf","react_default","a","createElement","index_es","item","container","spacing","justify","xs","map","_ref2","index","arr","content","id","key","color","className","divider","_ref3","withStyles","background","margin","unit","Album","pageContext","location","Layout","direction","alignItems","imageContainer","gatsby_image_default","fluid","image","title","variant","align","gutterBottom","year","description","split","paragraph","songs","Album_CombineTracks","propTypes","PropTypes","object","isRequired","maxWidth","padding","overflow","width","height"],"mappings":"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","file":"component---src-templates-album-index-js-0ddce19456235e0dba97.js","sourcesContent":["import React from 'react';\nimport {Grid, Typography, Divider} from '@material-ui/core';\n\nconst CombineTracks = ({ tracks, classes }) => {\n  const half = Math.ceil(tracks.length / 2);\n  const firstHalf = tracks.slice(0, half);\n  const secondHalf = tracks.slice(half);\n\n  return (\n    <Grid item container spacing={8} justify=\"space-around\">\n      <Grid item xs={5}>\n        {firstHalf.map(({ content, id }, index, arr) => {\n          return index<arr.length - 1 ? (\n          <div key={id}>\n            <Typography color=\"inherit\">\n              {`${index + 1} - ${content}`}\n            </Typography>\n            <Divider className={classes.divider} />\n          </div>\n          ) : (\n            <div key={id}>\n              <Typography color=\"inherit\">\n                {`${index + 1} - ${content}`}\n              </Typography>\n            </div>\n          )}\n        )}\n      </Grid>\n      <Grid item xs={5}>\n        {secondHalf.map(({ content, id }, index, arr) => {\n          return index<arr.length - 1 ? (\n            <div key={id}>\n              <Typography color=\"inherit\">\n                {`${half + index + 1} - ${content}`}\n              </Typography>\n              <Divider className={classes.divider} />\n            </div>\n          ) : (\n            <div key={id}>\n              <Typography color=\"inherit\">\n                {`${half + index + 1} - ${content}`}\n              </Typography>\n            </div>\n          )}\n        )}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default CombineTracks;","import Album from './component';\nimport styles from './styles';\nimport withStyles from '../../../withStyles';\n\nexport default withStyles(styles)(Album);","export default ({ spacing }) => ({\n  divider: {\n    background: '#ccc',\n    margin: [[spacing.unit, 0]],\n  }\n});\n","import React from 'react';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport Layout from '../../components/Layout';\nimport CombineTracks from './CombineTracks';\n\nconst Album = ({ pageContext, classes, location }) => (\n  <Layout location={location}>\n    <Grid\n      direction=\"column\"\n      className={classes.container}\n      container\n    >\n      <Grid\n        alignItems=\"center\"\n        item\n        container\n      >\n        <Grid item className={classes.imageContainer}>\n          <Img fluid={pageContext.image.fluid} className={classes.image} />\n        </Grid>\n        <Grid item className={classes.title}>\n          <Typography variant=\"h2\" align=\"center\" color=\"inherit\" gutterBottom>\n            {pageContext.title}\n          </Typography>\n          <Typography variant=\"h3\" align=\"center\" color=\"inherit\">\n            {pageContext.year}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid item className={classes.description}>\n        {pageContext.description.description\n          .split('<-$&%->')\n          .map((item, index) => (\n            <Typography key={index} align=\"justify\" variant=\"title\" color=\"inherit\" paragraph>\n              {' '+item}\n            </Typography>\n          ))\n        }\n      </Grid>\n      <Typography variant=\"headline\" color=\"inherit\" className={classes.songs}>Tracks:</Typography>\n      <CombineTracks tracks={pageContext.tracks}/>\n    </Grid>\n  </Layout>\n);\n\nAlbum.propTypes = {\n  pageContext: PropTypes.object.isRequired,\n};\n\nexport default Album;\n\n\n\n\n","import CombineTracks from './component';\nimport styles from './styles';\nimport withStyles from '../../withStyles';\n\nexport default withStyles(styles)(CombineTracks);","export default ({ spacing }) => ({\n  container: {\n    maxWidth: spacing.unit * 120,\n    margin: [[spacing.unit * 10, 'auto']],\n    background: '#202020',\n    color: '#eee',\n    padding: spacing.unit * 5,\n  },\n\n  imageContainer: {\n    overflow: 'hidden',\n  },\n\n  image: {\n    width: spacing.unit * 50,\n    height: spacing.unit * 50,\n  },\n\n  title: {\n    margin: 'auto',\n  },\n\n  description: {\n    margin: [[spacing.unit * 3, 0]]\n  },\n\n  songs: {\n    margin: [[spacing.unit * 3, 0]]\n  }\n});\n"],"sourceRoot":""}