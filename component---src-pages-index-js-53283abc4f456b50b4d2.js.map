{"version":3,"sources":["webpack:///./src/components/YouTube/component.js","webpack:///./src/components/YouTube/index.js","webpack:///./src/components/YouTube/styles.js","webpack:///./src/pages/index.js"],"names":["YouTube","_ref","videoId","title","reverse","classes","react_default","a","createElement","index_es","direction","justify","alignItems","className","container","wrap","item","videoContainer","video","es_YouTube","opts","height","width","size","thickness","spinner","ustify","variant","align","gutterBottom","withStyles","spacing","maxWidth","unit","background","padding","margin","zIndex","display","position","justifyContent","color","__webpack_require__","d","__webpack_exports__","queryPage","IndexPage","data","Layout","style","marginTop","gatsby_image_default","fluid","allImageSharp","edges","node","marginBottom","allContentfulImagineDragonsClip","map","_ref2","index","key","components_YouTube"],"mappings":"yJA6CeA,EAzCC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,MAAOC,EAAnBH,EAAmBG,QAASC,EAA5BJ,EAA4BI,QAA5B,OACdC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAWN,EAAU,cAAgB,MACrCO,QAAQ,gBACRC,WAAW,SACXC,UAAWR,EAAQS,UACnBC,KAAK,SACLD,WAAS,GAETR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMO,MAAI,GACRV,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQY,gBACtBX,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQa,OACtBZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEN,UAAWR,EAAQa,MACnBhB,QAASA,EACTkB,KAAM,CACJC,OAAQ,IACRC,MAAO,QAIbhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEc,KAAM,IACNC,UAAW,GACXX,UAAWR,EAAQoB,YAIzBnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiB,OAAO,SACPd,WAAW,SACXE,WAAS,EACTE,MAAI,GAEJV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYkB,QAAQ,KAAKd,UAAWR,EAAQF,MAAOyB,MAAM,SAASC,cAAY,GAC3E1B,eCnCM2B,cCJA,SAAA7B,GAAA,IAAG8B,EAAH9B,EAAG8B,QAAH,MAAkB,CAC/BjB,UAAW,CACTkB,SAAyB,IAAfD,EAAQE,KAClBC,WAAY,UACZC,QAAS,CAAC,CAAC,EAAkB,EAAfJ,EAAQE,OACtBG,OAAQ,CAAC,CAAC,EAAGL,EAAQE,KAAqB,EAAfF,EAAQE,KAAUF,EAAQE,QAGvDf,MAAO,CACLmB,OAAQ,IAGVpB,eAAgB,CACdqB,QAAS,OACTC,SAAU,WACVC,eAAgB,SAChB5B,WAAY,SACZS,OAAQ,IACRC,MAAO,KAGTG,QAAS,CACPc,SAAU,WACVE,MAAO,SAGTtC,MAAO,CACLsC,MAAO,OACPL,OAAQ,UDxBGN,CAAmB9B,YEJlC0C,EAAAC,EAAAC,EAAA,8BAAAC,IAQA,IAqBaA,EAAS,aAiCPC,UAtDG,SAAA7C,GAAA,IAAG8C,EAAH9C,EAAG8C,KAAH,OAChBzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMK,WAAS,EAACH,QAAQ,SAASsC,MAAO,CAACC,UAAW,KAClD5C,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CACE6C,MAAOL,EAAKM,cAAcC,MAAM,GAAGC,KAAKH,MACxCH,MAAO,CAAC3B,MAAO,sBAAuBkC,aAAc,UAErDT,EAAKU,gCAAgCH,MAAMI,IAAI,SAAAC,EAAWC,GAAU,IAAlBL,EAAkBI,EAAlBJ,KACzCpD,EAAeoD,EAAfpD,MAAO0D,EAAQN,EAARM,IAEf,OAAOD,EAAM,GAAM,EACjBtD,EAAAC,EAAAC,cAACsD,EAAD,CAASD,IAAKA,EAAK1D,MAAOA,EAAOD,QAAS2D,IAE1CvD,EAAAC,EAAAC,cAACsD,EAAD,CAASD,IAAKA,EAAK1D,MAAOA,EAAOD,QAAS2D,EAAKzD,SAAO","file":"component---src-pages-index-js-53283abc4f456b50b4d2.js","sourcesContent":["import React from 'react';\nimport YT from 'react-youtube';\nimport { Grid, CircularProgress, Typography } from '@material-ui/core';\n\nconst YouTube = ({ videoId, title, reverse, classes }) => (\n  <Grid\n    direction={reverse ? 'row-reverse' : 'row'}\n    justify=\"space-between\"\n    alignItems=\"center\"\n    className={classes.container}\n    wrap=\"nowrap\"\n    container\n  >\n    <Grid item>\n      <div className={classes.videoContainer}>\n        <div className={classes.video}>\n          <YT\n            className={classes.video}\n            videoId={videoId}\n            opts={{\n              height: 390,\n              width: 640,\n            }}\n          />\n        </div>\n        <CircularProgress\n          size={200}\n          thickness={0.1}\n          className={classes.spinner}\n        />\n      </div>\n    </Grid>\n    <Grid \n      ustify=\"center\"\n      alignItems=\"center\"\n      container\n      item\n    >\n      <Typography variant=\"h3\" className={classes.title} align=\"center\" gutterBottom>\n        {title}\n      </Typography>\n    </Grid>\n  </Grid>\n);\n\nexport default YouTube;","import YouTube from './component';\nimport styles from './styles';\nimport withStyles from '../../withStyles';\n\nexport default withStyles(styles)(YouTube);","export default ({ spacing }) => ({\n  container: {\n    maxWidth: spacing.unit * 120,\n    background: '#262626',\n    padding: [[0, spacing.unit * 2]],\n    margin: [[0, spacing.unit, spacing.unit * 2, spacing.unit]],\n  },\n\n  video: {\n    zIndex: 10,\n  },\n\n  videoContainer: {\n    display: 'flex',\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 390,\n    width: 640,\n  },\n\n  spinner: {\n    position: 'absolute',\n    color: 'black',\n  },\n\n  title: {\n    color: '#eee',\n    margin: 'auto',\n  }\n});","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport YouTube from '../components/YouTube';\nimport Layout from '../components/Layout';\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <Grid container justify=\"center\" style={{marginTop: 80}}>\n      <Img\n        fluid={data.allImageSharp.edges[0].node.fluid}\n        style={{width: 'calc(100vw - 200px)', marginBottom: '40px'}}\n      />\n      {data.allContentfulImagineDragonsClip.edges.map(({ node }, index) => {\n        const { title, key } = node;\n\n        return index%2 === 0 ? (\n          <YouTube key={key} title={title} videoId={key} />\n        ) : (\n          <YouTube key={key} title={title} videoId={key} reverse />\n        )\n      })}\n    </Grid>\n    \n  </Layout>\n);\n\nexport const queryPage = graphql`\n  query clipList {\n    allContentfulImagineDragonsClip (sort: {fields: [public], order: DESC}) {\n      edges {\n        node {\n          title\n          key\n        }\n      }\n    }\n    allImageSharp (filter: {fixed: {originalName: {in: \"backgroundRoot.jpg\"}}}) {\n      edges {\n        node {\n          fluid (maxHeight: 2000) {\n            base64\n            tracedSVG\n            aspectRatio\n            src\n            srcSet\n            srcWebp\n            srcSetWebp\n            sizes\n            originalImg\n            originalName\n            presentationWidth\n            presentationHeight\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}